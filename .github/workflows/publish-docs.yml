name: Publish docs

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build_docs:
    runs-on: macos-latest
    env:
      DYLD_FALLBACK_LIBRARY_PATH: /opt/homebrew/lib

    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          brew install cairo freetype libffi libjpeg libpng zlib
          python3 -m pip install --upgrade pip
          python3 -m pip install mkdocs mkdocs-material mkdocs-video "mkdocs-material[imaging]" mike

      - uses: gradle/actions/setup-gradle@v4

      - run: |
          ./gradlew \
              :internal:dokka:dokkaGenerate \
              :sample:web:wasmJsBrowserDistribution \
              :sample:web:jsBrowserDistribution

      - name: Copy Dokka and samples output to docs
        run: |
          cp -r internal/dokka/build/dokka/html/ docs/api/
          mkdir -p docs/sample
          cp -r sample/web/build/dist/wasmJs/productionExecutable/ docs/sample/wasm/
          cp -r sample/web/build/dist/js/productionExecutable/ docs/sample/js/

      - name: Build docs
        run: mkdocs build

      - name: Upload docs
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: |
            docs/api/
            docs/sample/

  deploy_docs:
    runs-on: macos-latest
    needs: build_docs
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    env:
      DYLD_FALLBACK_LIBRARY_PATH: /opt/homebrew/lib

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          brew install cairo freetype libffi libjpeg libpng zlib
          python3 -m pip install --upgrade pip
          python3 -m pip install mkdocs mkdocs-material mkdocs-video "mkdocs-material[imaging]" mike

      - name: Get Docs Version
        run: cat gradle.properties | grep --color=never VERSION_NAME >> $GITHUB_OUTPUT
        id: version

      - name: Download docs builds
        uses: actions/download-artifact@v5
        with:
          name: docs
          path: docs

      - name: Configure git for mike
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git fetch origin gh-pages --depth=1

      - name: Deploy dev docs with mike ðŸ—¿
        if: ${{ success() && contains(steps.version.outputs.VERSION_NAME, 'SNAPSHOT') }}
        env:
          HAZE_VERSION: dev
        run: mike deploy -u --push dev

      - name: Deploy release docs with mike ðŸš€
        if: ${{ success() && !contains(steps.version.outputs.VERSION_NAME , 'SNAPSHOT') }}
        env:
          HAZE_VERSION: ${{ steps.version.outputs.VERSION_NAME }}
        run: mike deploy -u --push ${{ steps.version.outputs.VERSION_NAME }} latest

      - name: Delete old doc versions
        run: |
          git fetch origin gh-pages --depth=1
          scripts/delete_old_version_docs.sh
