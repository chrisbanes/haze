// Signature format: 4.0
package dev.chrisbanes.haze {

  public final class HazeChildKt {
    method @Deprecated public static androidx.compose.ui.Modifier hazeChild(androidx.compose.ui.Modifier, dev.chrisbanes.haze.HazeState state, androidx.compose.ui.graphics.Shape shape, dev.chrisbanes.haze.HazeStyle style);
    method public static androidx.compose.ui.Modifier hazeChild(androidx.compose.ui.Modifier, dev.chrisbanes.haze.HazeState state, dev.chrisbanes.haze.HazeStyle style);
    method public static androidx.compose.ui.Modifier hazeChild(androidx.compose.ui.Modifier, dev.chrisbanes.haze.HazeState state, kotlin.jvm.functions.Function1<? super dev.chrisbanes.haze.HazeChildScope,kotlin.Unit> block);
  }

  public interface HazeChildScope {
    method public void applyStyle(dev.chrisbanes.haze.HazeStyle style);
    method public float getAlpha();
    method public long getBackgroundColor();
    method public float getBlurRadius();
    method public dev.chrisbanes.haze.HazeTint? getFallbackTint();
    method public androidx.compose.ui.graphics.Brush? getMask();
    method public float getNoiseFactor();
    method public dev.chrisbanes.haze.HazeProgressive? getProgressive();
    method public java.util.List<dev.chrisbanes.haze.HazeTint> getTints();
    method public void setAlpha(float);
    method public void setBackgroundColor(long);
    method public void setBlurRadius(float);
    method public void setFallbackTint(dev.chrisbanes.haze.HazeTint?);
    method public void setMask(androidx.compose.ui.graphics.Brush?);
    method public void setNoiseFactor(float);
    method public void setProgressive(dev.chrisbanes.haze.HazeProgressive?);
    method public void setTints(java.util.List<dev.chrisbanes.haze.HazeTint>);
    property public abstract float alpha;
    property public abstract long backgroundColor;
    property public abstract float blurRadius;
    property public abstract dev.chrisbanes.haze.HazeTint? fallbackTint;
    property public abstract androidx.compose.ui.graphics.Brush? mask;
    property public abstract float noiseFactor;
    property public abstract dev.chrisbanes.haze.HazeProgressive? progressive;
    property public abstract java.util.List<dev.chrisbanes.haze.HazeTint> tints;
  }

  public final class HazeDefaults {
    method public float getBlurRadius();
    method public dev.chrisbanes.haze.HazeStyle style(long backgroundColor, optional dev.chrisbanes.haze.HazeTint tint, optional float blurRadius, optional float noiseFactor);
    method @Deprecated public dev.chrisbanes.haze.HazeStyle style(optional long backgroundColor, long tint, optional float blurRadius, optional float noiseFactor);
    method public dev.chrisbanes.haze.HazeTint tint(long color);
    property public final float blurRadius;
    field public static final dev.chrisbanes.haze.HazeDefaults INSTANCE;
    field public static final float noiseFactor = 0.15f;
    field public static final float tintAlpha = 0.7f;
  }

  public final class HazeKt {
    method public static androidx.compose.ui.Modifier haze(androidx.compose.ui.Modifier, dev.chrisbanes.haze.HazeState state);
  }

  public sealed interface HazeProgressive {
    method public int getSteps();
    property public abstract int steps;
    field public static final dev.chrisbanes.haze.HazeProgressive.Companion Companion;
    field public static final int STEPS_AUTO_BALANCED = -1; // 0xffffffff
  }

  public static final class HazeProgressive.Companion {
    method public dev.chrisbanes.haze.HazeProgressive.LinearGradient horizontalGradient(optional int steps, optional androidx.compose.animation.core.Easing easing, optional float startX, optional float startIntensity, optional float endX, optional float endIntensity);
    method public dev.chrisbanes.haze.HazeProgressive.LinearGradient verticalGradient(optional int steps, optional androidx.compose.animation.core.Easing easing, optional float startY, optional float startIntensity, optional float endY, optional float endIntensity);
    field public static final int STEPS_AUTO_BALANCED = -1; // 0xffffffff
  }

  public static final class HazeProgressive.LinearGradient implements dev.chrisbanes.haze.HazeProgressive {
    ctor public HazeProgressive.LinearGradient(optional int steps, optional androidx.compose.animation.core.Easing easing, optional long start, optional float startIntensity, optional long end, optional float endIntensity);
    method public int component1();
    method public androidx.compose.animation.core.Easing component2();
    method public long component3-F1C5BW0();
    method public float component4();
    method public long component5-F1C5BW0();
    method public float component6();
    method public dev.chrisbanes.haze.HazeProgressive.LinearGradient copy-owaVgss(int steps, androidx.compose.animation.core.Easing easing, long start, float startIntensity, long end, float endIntensity);
    method public androidx.compose.animation.core.Easing getEasing();
    method public long getEnd();
    method public float getEndIntensity();
    method public long getStart();
    method public float getStartIntensity();
    method public int getSteps();
    property public final androidx.compose.animation.core.Easing easing;
    property public final long end;
    property public final float endIntensity;
    property public final long start;
    property public final float startIntensity;
    property public int steps;
  }

  @androidx.compose.runtime.Stable public final class HazeState {
    ctor public HazeState();
    method public androidx.compose.ui.graphics.layer.GraphicsLayer? getContentLayer();
    method public long getPositionOnScreen();
    property public final androidx.compose.ui.graphics.layer.GraphicsLayer? contentLayer;
    property public final long positionOnScreen;
  }

  @androidx.compose.runtime.Immutable public final class HazeStyle {
    ctor public HazeStyle(optional long backgroundColor, optional dev.chrisbanes.haze.HazeTint? tint, optional float blurRadius, optional float noiseFactor, optional dev.chrisbanes.haze.HazeTint? fallbackTint);
    ctor public HazeStyle(optional long backgroundColor, optional java.util.List<dev.chrisbanes.haze.HazeTint> tints, optional float blurRadius, optional float noiseFactor, optional dev.chrisbanes.haze.HazeTint? fallbackTint);
    method public long component1-0d7_KjU();
    method public java.util.List<dev.chrisbanes.haze.HazeTint> component2();
    method public float component3-D9Ej5fM();
    method public float component4();
    method public dev.chrisbanes.haze.HazeTint? component5();
    method public dev.chrisbanes.haze.HazeStyle copy-cq6XJ1M(long backgroundColor, java.util.List<dev.chrisbanes.haze.HazeTint> tints, float blurRadius, float noiseFactor, dev.chrisbanes.haze.HazeTint? fallbackTint);
    method public long getBackgroundColor();
    method public float getBlurRadius();
    method public dev.chrisbanes.haze.HazeTint? getFallbackTint();
    method public float getNoiseFactor();
    method public java.util.List<dev.chrisbanes.haze.HazeTint> getTints();
    property public final long backgroundColor;
    property public final float blurRadius;
    property public final dev.chrisbanes.haze.HazeTint? fallbackTint;
    property public final float noiseFactor;
    property public final java.util.List<dev.chrisbanes.haze.HazeTint> tints;
    field public static final dev.chrisbanes.haze.HazeStyle.Companion Companion;
  }

  public static final class HazeStyle.Companion {
    method public dev.chrisbanes.haze.HazeStyle getUnspecified();
    property public final dev.chrisbanes.haze.HazeStyle Unspecified;
  }

  @androidx.compose.runtime.Stable public final class HazeTint {
    ctor public HazeTint(long color, optional int blendMode);
    method public long component1-0d7_KjU();
    method public int component2-0nO6VwU();
    method public dev.chrisbanes.haze.HazeTint copy-xETnrds(long color, int blendMode);
    method public int getBlendMode();
    method public long getColor();
    property public final int blendMode;
    property public final long color;
  }

}

